# -*- coding: utf-8 -*-
"""Unemployment_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1btUuDGBGct7v9Vcti5bCzG17rqY_-MiZ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from datetime import datetime

df = pd.read_csv("/content/Unemployment in India.csv")
df.head()

df.columns

df.shape

df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_')

df['date'] = pd.to_datetime(df['date'])

print(df.info())
print("\nMissing Values:\n", df.isnull().sum())

print("Regions:", df['region'].unique())

print("Date Range:", df['date'].min(), "to", df['date'].max())

print(df['estimated_unemployment_rate_(%)'].describe())

plt.figure(figsize=(14, 6))
sns.lineplot(data=df,x='date',y='estimated_unemployment_rate_(%)',hue='region',marker='o')
plt.title('Unemployment Rate Over Time by Region')
plt.xlabel('Date')
plt.ylabel('Unemployment Rate (%)')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

df['month'] = df['date'].dt.month
df['year'] = df['date'].dt.year

monthly_avg = df.groupby('month')['estimated_unemployment_rate_(%)'].mean()

plt.figure(figsize=(10, 5))
sns.lineplot(x=monthly_avg.index, y=monthly_avg.values, marker='o', color='teal')
plt.title('Average Unemployment Rate by Month (Seasonal Trend)')
plt.xlabel('Month')
plt.ylabel('Unemployment Rate (%)')
plt.xticks(range(1, 13))
plt.grid(True)
plt.tight_layout()
plt.show()

latest_date = df['date'].max()

latest_data = df[df['date'] == latest_date]

plt.figure(figsize=(12, 6))
latest_sorted = latest_data.sort_values('estimated_unemployment_rate_(%)', ascending=False)

sns.barplot(data=latest_sorted, x='estimated_unemployment_rate_(%)', y='region', palette='viridis')
plt.title(f"State-wise Unemployment Rate on {latest_date.date()}")
plt.xlabel("Unemployment Rate (%)")
plt.ylabel("State/Region")
plt.tight_layout()
plt.show()

pre_covid = df[df['date'] < '2020-03-01']
covid = df[(df['date'] >= '2020-03-01') & (df['date'] <= '2021-12-31')]
post_covid = df[df['date'] > '2021-12-31']

pre_avg = pre_covid['estimated_unemployment_rate_(%)'].mean()
covid_avg = covid['estimated_unemployment_rate_(%)'].mean()
post_avg = post_covid['estimated_unemployment_rate_(%)'].mean()

print("Average Unemployment Rate:")
print(f"Pre-Covid: {pre_avg:.2f}%")
print(f"Covid Period: {covid_avg:.2f}%")
print(f"Post-Covid: {post_avg:.2f}%")

periods = ['Pre-Covid', 'Covid', 'Post-Covid']
averages = [pre_avg, covid_avg, post_avg]

plt.figure(figsize=(8, 5))
sns.barplot(x=periods, y=averages, palette='Set2')
plt.title('Average Unemployment Rate by Period')
plt.ylabel('Unemployment Rate (%)')
plt.ylim(0, max(averages) + 2)
plt.grid(True)
plt.tight_layout()
plt.show()

"""**Policy Recommendations:-**

1. State-Focused Employment Initiatives
Implement job creation programs tailored to states with higher unemployment rates.

2. Emergency Employment Support Systems
Establish fast-acting support systems to provide assistance during future crises, such as pandemics or natural disasters, to protect livelihoods.

3. Seasonal Workforce Assistance
Introduce temporary job or income support programs for seasonal workers—particularly in agriculture and among migrant populations—during periods of low employment demand.

4. Remote Work and Digital Skill Development
Expand access to digital literacy and remote work training, especially in rural and semi-urban areas, to open up new employment avenues beyond traditional industries.


5. Localized Unemployment Monitoring
Set up regular tracking of unemployment at more detailed administrative levels like districts or municipalities to ensure quicker and more effective policy responses.
"""